# Generated by Django 4.2.11 on 2024-04-16 17:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=255)),
                ('credit_hour', models.IntegerField()),
                ('pre_req', models.CharField(blank=True, max_length=255, null=True)),
                ('course_type', models.CharField(max_length=255)),
                ('credits', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CoursesOfferedByStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_hour', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.course')),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('contact_no', models.CharField(max_length=15)),
                ('instructor_pay', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('course', models.ManyToManyField(through='DBPROJECT.CoursesOfferedByStudent', to='DBPROJECT.course')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('service_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('contact_no', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='StudentInSemester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentEnrolledInCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=2)),
                ('marks', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.student')),
            ],
        ),
        migrations.CreateModel(
            name='ServicesUsedByStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complain', models.TextField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.service')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.student')),
            ],
        ),
        migrations.AddField(
            model_name='semester',
            name='student',
            field=models.ManyToManyField(through='DBPROJECT.StudentInSemester', to='DBPROJECT.student'),
        ),
        migrations.CreateModel(
            name='CoursesTaughtByInstructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.course')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.instructor')),
            ],
        ),
        migrations.AddField(
            model_name='coursesofferedbystudent',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.semester'),
        ),
        migrations.CreateModel(
            name='Chatbot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField()),
                ('response', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.student')),
            ],
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('director', models.CharField(max_length=255)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBPROJECT.service')),
            ],
        ),
    ]
